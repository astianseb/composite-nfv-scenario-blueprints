tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.0.1/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-openstack-plugin/2.2.0/plugin.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-utilities-plugin/1.3.0/plugin.yaml

inputs:

  fortigate_image_url:
    default: "https://s3-eu-west-1.amazonaws.com/cloudify-labs/images/FG562-DZ.img"

  user:
    description: >
      The username of the agent running on the instance created from the image.
    default: admin
  password:
    default: ""

  flavor:
    description: >
      An Openstack Flavor ID.
    default: { get_secret: small_image_flavor }

  private_network:
    default: { get_secret: public_network_name }

  private_subnet:
    default: { get_secret: public_subnet_name }

  public_network:
    default: public_net

  public_subnet:
    default: public_net_subnet

  management_network:
    default: { get_secret: private_network_name }

  management_subnet:
    default: { get_secret: private_subnet_name }

  external_network:
    default: { get_secret: external_network_name }


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }

node_templates:

  fortigate_vnf_baseline_config:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            terminal_auth: &terminal_auth
              user: admin
              password: ''
              ip: { get_attribute: [fortigate_vnf, ip] }
              promt_check:
                - '#'
                - '$'
              errors:
                - "Command fail."
            calls:
              - action: exit
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/fortigate-baseline.txt
    relationships:
      - type: cloudify.relationships.depends_on
        target: fortigate_vnf
      - type: cloudify.relationships.depends_on
        target: mgmt_port


  fortigate_vnf:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      agent_config:
        install_method: none
      server:
        key_name: ''
        image: "fortigate"
        flavor: { get_input: flavor }
      management_network_name: { get_property: [ mgmt_network, resource_id ] }
    relationships:
    - type: cloudify.openstack.server_connected_to_port
      target: mgmt_port
    - type: cloudify.openstack.server_connected_to_port
      target: public_network_port
    - type: cloudify.openstack.server_connected_to_port
      target: private_network_port
    - type: cloudify.relationships.depends_on
      target: fortigate_image

  mgmt_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: mgmt_network
    - type: cloudify.relationships.depends_on
      target: mgmt_subnet
    - type: cloudify.openstack.port_connected_to_security_group
      target: security_group
    - type: cloudify.openstack.port_connected_to_floating_ip
      target: ip

  public_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: public_network
    - type: cloudify.relationships.depends_on
      target: public_network_subnet
    - type: cloudify.openstack.port_connected_to_security_group
      target: security_group

  private_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: private_network
    - type: cloudify.relationships.depends_on
      target: private_network_subnet
    - type: cloudify.openstack.port_connected_to_security_group
      target: security_group

  fortigate_image:
    type: cloudify.openstack.nodes.Image
    properties:
      image:
        container_format: "bare"
        disk_format: "qcow2"
      openstack_config: *openstack_config
      image_url: {get_input : fortigate_image_url }
      use_external_resource: true
      create_if_missing: true
      resource_id: "fortigate"

  mgmt_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: management_subnet }
    relationships:
    - target: mgmt_network
      type: cloudify.relationships.contained_in

  mgmt_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: management_network }

  public_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_subnet }
    relationships:
    - target: public_network
      type: cloudify.relationships.contained_in

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_network }

  private_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: private_subnet }
    relationships:
    - target: private_network
      type: cloudify.relationships.contained_in

  private_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: private_network }

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      security_group:
#        name: fortinet_security_group
        description: generic security group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "TCP"
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "UDP"
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "ICMP"
          port_range_min: 0
          port_range_max: 0
        - remote_ip_prefix: 0.0.0.0/0
          protocol: 89


  ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_secret: external_network_name }


outputs:

  fortigate_vnf_mgmt_ip:
    value: { get_attribute: [fortigate_vnf, ip] }
